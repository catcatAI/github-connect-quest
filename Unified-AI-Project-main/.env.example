# Unified-AI-Project Environment Variables Example
# -------------------------------------------------
# This file provides an example of environment variables needed for the project.
# Copy this file to .env and fill in your actual credentials and settings.
# Do NOT commit your actual .env file to version control.

# === API Keys & Credentials ===
# These keys correspond to the structure in configs/api_keys.yaml

# üîë Google Gemini API Key (from Google Cloud Console)
GEMINI_API_KEY=your-gemini-api-key-here

# üîë OpenAI API Key
OPENAI_API_KEY=your-openai-api-key-here # e.g., sk-xxxxxxxxxxxxxxxxxxxx

# üîê Firebase Admin SDK JSON Path
# Path to your Firebase serviceAccountKey.json file.
# Can be a relative path (e.g., ./config/firebase/serviceAccountKey.json) or an absolute path.
FIREBASE_CREDENTIALS_PATH=./path/to/your/serviceAccountKey.json

# === HAM Memory Manager Configuration ===
# üîê HAM Memory Manager Encryption Key (Base64 encoded Fernet key)
# Generate a new key with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# This key is required for HAM memory encryption/decryption functionality
MIKO_HAM_KEY=your-base64-encoded-fernet-key-here

# === General Configuration ===

# üåê Base URL for the application or specific services
BASE_URL=https://your-unified-project-domain.com

# === Other Service Keys (Examples) ===
# Add any other API keys or sensitive configurations your project might need.
# ANOTHER_SERVICE_API_KEY=your-other-service-api-key

# === Database Configuration (Example if not using Firebase exclusively) ===
# DB_HOST=localhost
# DB_PORT=5432
# DB_USER=your_db_user
# DB_PASSWORD=your_db_password
# DB_NAME=your_db_name

# === System Settings ===
# LOG_LEVEL=INFO # Overrides system_config.yaml if needed for specific environments
# NODE_ENV=development # e.g., development, staging, production

# Note: The application's configuration manager should prioritize environment variables
# over default values specified in configuration files (e.g., system_config.yaml).
# This allows for flexible deployment across different environments.
