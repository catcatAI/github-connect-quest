[build-system]
requires = [ "setuptools>=61.0",]
build-backend = "setuptools.build_meta"

[project]
name = "unified-ai-project"
version = "0.1.0"
description = "A unified AI project with modular architecture and optional dependencies"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [ "Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11",]
dependencies = [ "Flask>=2.0.0", "numpy>=1.21.0", "cryptography>=3.4.0", "requests>=2.25.0", "python-dotenv>=0.19.0", "PyYAML>=6.0", "typing-extensions>=4.0.0", "paho-mqtt>=1.6.0", "networkx>=2.6.0", "psutil>=5.8.0", "faiss-cpu>=1.7.0", "sentence-transformers>=2.2.0",
 "gmqtt>=0.7.0",]
[[project.authors]]
name = "Unified AI Project Team"

[project.license]
text = "MIT"

[project.optional-dependencies]
minimal = [ "Flask", "numpy", "cryptography", "requests", "python-dotenv", "PyYAML", "typing-extensions", "paho-mqtt", "networkx", "psutil", "pandas", "scikit-learn",]
standard = [ "Flask", "numpy", "cryptography", "requests", "python-dotenv", "PyYAML", "typing-extensions", "paho-mqtt", "networkx", "psutil", "pandas", "scikit-learn", "fastapi", "uvicorn", "pydantic", "httpx",]
full = [ "Flask", "numpy", "cryptography", "requests", "python-dotenv", "PyYAML", "typing-extensions", "paho-mqtt", "networkx", "psutil", "pandas", "scikit-learn", "tensorflow", "ml-dtypes~=0.3.1", "tensorboard<2.17,>=2.16", "spacy", "fastapi", "uvicorn", "pydantic", "httpx", "pytest", "pytest-asyncio", "pytest-cov", "aiounittest", "pygame", "PyQt5", "pyshortcuts", "secret-sharing", "qrcode", "beautifulsoup4", "github3.py", "scikit-image", "SpeechRecognition", "faiss-cpu", "sentence-transformers", "huggingface-hub", "transformers",]
ai_focused = [ "Flask", "numpy", "cryptography", "requests", "python-dotenv", "PyYAML", "typing-extensions", "paho-mqtt", "networkx", "psutil", "pandas", "scikit-learn", "tensorflow", "spacy", "sentence-transformers", "huggingface-hub", "transformers",]
game = [ "Flask", "numpy", "cryptography", "requests", "python-dotenv", "PyYAML", "typing-extensions", "paho-mqtt", "networkx", "psutil", "pygame", "pandas", "scikit-learn",]
installer = [ "PyQt5", "pyshortcuts", "secret-sharing", "qrcode",]
testing = [ "pytest", "pytest-asyncio", "pytest-cov", "aiounittest",]

[project.urls]
Homepage = "https://github.com/pypa/sampleproject"
"Bug Tracker" = "https://github.com/pypa/sampleproject/issues"

[tool.setuptools]
packages = [ "core_ai", "services", "tools", "interfaces", "hsp",]

[tool.black]
line-length = 88
target-version = [ "py38", "py39", "py310", "py311",]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n  | data\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [ "src", "tests",]
known_third_party = [ "numpy", "pandas", "flask", "fastapi", "pydantic",]
sections = [ "FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER",]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
[[tool.mypy.overrides]]
module = [ "paho.mqtt.*", "spacy.*", "tensorflow.*", "faiss.*", "sentence_transformers.*",]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = [ "tests", "data",]
skips = [ "B101", "B601",]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
pythonpath = [ ".", "src",]
testpaths = [ "tests",]
markers = [ "slow: marks tests as slow (deselect with '-m \"not slow\"')", "online: marks tests that require an internet connection", "mcp: marks tests related to MCP functionality", "context7: marks tests related to Context7 integration", "ai_core: marks tests for core AI functionality", "timeout: marks tests with a timeout",]
filterwarnings = [ "ignore::DeprecationWarning", "ignore::PendingDeprecationWarning",]
asyncio_mode = "auto"
addopts = "-v --tb=short --strict-markers --timeout=600"

[tool.pylint.messages_control]
disable = [ "C0103", "C0114", "R0903", "R0913", "W0613",]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 8
max-locals = 20
max-branches = 15
max-statements = 60
